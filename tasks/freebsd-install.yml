---

# - name: FREEBSD_INSTALL | Zabbix allowed in firewalld
#   ansible.posix.firewalld:
#     service: zabbix-agent
#     permanent: true
#     immediate: true
#     zone: "{{ firewalld_zone }}"
#     state: enabled

# - name: FREEBSD_INSTALL | Zabbix repo installed
#   block:
#     - name: Check for zabbix repo file
#       ansible.builtin.stat:
#         path: /etc/yum.repos.d/zabbix.repo
#       register: repopath
#     - name: Zabbix repo added
#       shell: rpm -Uvh "{{ zabbix_repo_url }}" && yum clean all
#       when: not repopath.stat.exists

# - name: FREEBSD_INSTALL | Old Zabbix agent absent
#   ansible.builtin.yum:
#     state: absent
#     autoremove: true
#     update_cache: true
#     name:
#       - zabbix4*-agent

- name: FREEBSD_INSTALL | Get most recent Zabbix agent version
  ansible.builtin.shell:
    cmd: >
      pkg search --regex "zabbix[0-9]+-agent" |
      awk -F- '{print $1}' |
      sort |
      tail -1
  tags: zab_agent_template
  changed_when: false
  register: zabbix_package_version

- name: FREEBSD_INSTALL | Zabbix agent installed
  ansible.builtin.package:
    state: present
    name: "{{ zabbix_package_version.stdout }}-agent"
  notify: restart-zabbix-agent-freebsd

- name: FREEBSD_INSTALL | /usr/local/etc/{{ zabbix_package_version }}/zabbix_agentd.conf deployed
  ansible.builtin.template:
    src: zabbix_agentd.conf.j2
    dest: /usr/local/etc/{{ zabbix_package_version.stdout }}/zabbix_agentd.conf
    owner: root
    group: wheel
    mode: '0644'
    backup: true
  tags: zab_agent_template
  notify: restart-zabbix-agent-freebsd

# - name: FREEBSD_INSTALL | PSK deployed
#   block:
#     - name: FREEBSD_INSTALL | PSK path exists
#       ansible.builtin.file:
#         path: "{{ zabbix_agent_tlspskfile | dirname }}"
#         state: directory
#         mode: "0750"
#         owner: zabbix
#         group: zabbix
#       notify: restart-zabbix-agent-linux
#     - name: FREEBSD_INSTALL | PSK deployed
#       ansible.builtin.copy:
#         content: "{{ zabbix_psk }}"
#         dest: "{{ zabbix_agent_tlspskfile }}"
#         mode: "0640"
#         owner: zabbix
#         group: zabbix
#       notify: restart-zabbix-agent-linux
#   when: zabbix_agent_TLSPSKFile is defined

# - name: FREEBSD_INSTALL | Zabbix agent enabled and running
#   ansible.builtin.systemd:
#     name: zabbix-agent.service
#     state: started
#     enabled: true
#     masked: false

# - name: FREEBSD_INSTALL | Fix zabbix_api.py
#   become: true
#   block:
# # Depending on the user's version of Python, this file could be in a few different
# #  places. Instead of setting the filepath based on the target's Python version, I
# #  think it's more robust to just search for the file in Python's parent directory.
#     - name: FREEBSD_INSTALL | Locate zabbix_api.py
#       delegate_to: localhost
#       find:
#         paths:
#           - /usr/lib
#           - /usr/local/lib
#         patterns: zabbix_api.py
#         recurse: true
#       register: zabfile
# # The zabbix_host module requires zabbix_api.py to be present on the host
# #   interacting with the Zabbix Server. If the host has FIPS enabled
# #   (which is a CAT 1 STIG), then this module will fail with an MD5 hash error.
# #   To fix this, the hashlib.md5() function call must include the
# #   "usedforsecurity=False" parameter. The below task edits the
# #   /usr/lib/python[version]/site-packages/zabbix_api.py file on the Ansible
# #   controller so the line calling hashlib.md5 reads as follows:
# # hashed_pw_string = "md5(" + hashlib.md5(l_password.encode('utf-8'), usedforsecurity=False).hexdigest() + ")"
#     - name: FREEBSD_INSTALL | Fixed zabbix_api.py md5 hash mode
#       lineinfile:
#         path: "{{ item.path }}"
#         regex: ^\s*hashed_pw_string = .*
#         line: '        hashed_pw_string = "md5(" + hashlib.md5(l_password.encode(''utf-8''), usedforsecurity=False).hexdigest() + ")"'
#     #   ^^^ Quotes here are required to keep the leading spaces to match Python's indentation.
#       loop: "{{ zabfile.files }}"
